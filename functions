#!/usr/bin/env bash
set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x
source "$PLUGIN_CORE_AVAILABLE_PATH/common/functions"
source "$PLUGIN_AVAILABLE_PATH/proxy/functions"

fn-ports-open() {
  declare APP="$1"
  dokku_log_info1_quiet "Opening ports"
  for p in $(fn-ports-list "$APP") ; do
    dokku_log_verbose_quiet "Opening port ${p}/tcp .. "
    sudo ufw allow "${p}/tcp" > /dev/null 2>&1 && echo OK || echo ERROR;
  done
}

fn-ports-close() {
  declare APP="$1"
  dokku_log_info1_quiet "Closing ports"
  for p in $(fn-ports-list "$APP") ; do
    dokku_log_verbose_quiet "Closing port ${p}/tcp .. "
    sudo ufw delete allow "${p}/tcp" > /dev/null 2>&1 && echo OK || echo ERROR;
  done
}

fn-ports-list() {
  declare APP="$1"
  local DOKKU_IS_APP_PROXY_ENABLED IMAGE_NAME IMAGE_TAG INSTANCES

  DOKKU_IS_APP_PROXY_ENABLED="$(is_app_proxy_enabled "$APP")"
  if [[ "$DOKKU_IS_APP_PROXY_ENABLED" == "true" ]]; then
    dokku_log_fail "App proxy enabled, no ports exposed"
  fi

  IMAGE_TAG="latest"
  IMAGE_NAME="$(get_deploying_app_image_name "$APP" "$IMAGE_TAG")"
  INSTANCES=$(docker ps | grep "$IMAGE_NAME" | grep -v CONTAINER | cut -d\  -f1 | tr '\n' ' ')
  for i in $INSTANCES; do
    docker inspect --format='{{range $p, $conf := .NetworkSettings.Ports}} {{$p}} -> {{(index $conf 0).HostPort}} {{end}}' "$i" | xargs | cut -d' ' -f3 || true
  done | uniq
}
